name: Tests

on:
  push:
    branches:
      - 'master'
  pull_request:
    types:
      - synchronize
      - opened
      - edited
      - reopened
jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [8.0]
        laravel: ['8.*']

    name: 'PHP ${{ matrix.php }} / Laravel ${{ matrix.laravel }}'

    steps:
      - uses: actions/checkout@master

      # Configure PHP
      - name: Select PHP version
        uses: shivammathur/setup-php@master
        with:
          php-version: '${{ matrix.php }}'
          extensions: mbstring, pdo_sqlite, fileinfo, gd
          coverage: none

      # Configure Database Mysql
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3800 # Optional, default value is 3306. The port of host
          container port: 3307 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'some_test' # Optional, default value is "test". The specified database which will be create
          mysql root password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"

      - name: Get Branch Name
        run: echo running on branch ${GITHUB_REF##*/} >> hello && cat hello
      # Configure NPM
      # - uses: actions/setup-node@v1
      #   with:
      #     node-version: '14.x'

      # Install PHP dependencies
      # - name: Install Composer dependencies
      #   run: composer require "illuminate/support:${{ matrix.laravel }}"

      # Install legacy factories for Laravel 8/9
      # - name: Install legacy factories for Laravel
      #   if: ${{ matrix.laravel == '8.*' }}
      #   run: composer require laravel/legacy-factories

      # Display installed laravel version
      # - name: Show laravel version
      #   run: composer show laravel/framework

      # Run phpunit tests
      # - name: Run tests
      #   run: ./vendor/bin/phpunit
